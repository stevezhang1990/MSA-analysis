#!/usr/bin/python
from scipy import *
from pylab import *
from mpl_toolkits.basemap import Basemap, addcyclic
from netCDF4 import Dataset
from matplotlib.colors import LogNorm
from geos_interpolate import geos_interpolate
from mpl_toolkits.axes_grid1 import make_axes_locatable
import matplotlib.pyplot as plt
def draw_screen_mask( lat_mask, lon_mask, m):

    lats = [lat_mask[0],lat_mask[-1],lat_mask[-1],lat_mask[0]]
    lons = [lon_mask[0],lon_mask[0],lon_mask[-1],lon_mask[-1]]
    x, y = m( lons, lats )
    xy = zip(x,y)
    poly = Polygon( xy, facecolor='blue', alpha=0.4 )
    gca().add_patch(poly)
d2y = np.array([15,16,14,15,15,16,15,15,15,16,15,15,15,16,15,16,15,15,15,16,15,15,15,16])
mon_counter = np.array([31,29,31,30,31,30,31,31,30,31,30,31])
infile00 = Dataset('/users/jk/15/xzhang/gcadj_std_T_3d/runs/v8-02-01/geos5_all_1608_AM/ctm.00.20160801.nc')
lon = infile00.variables["LON"][:]
lat = infile00.variables["LAT"][:]
len1,len2,len3 = shape(infile00.variables["IJ-AVG-S__Ox"][:,:,:])
len4 = 4
len5 = 24
O3 = np.zeros((len4,len5,len1,len2,len3))
O3_crt = np.zeros((len4,len5,5,len2,len3))
for j in range(4):
    for i in range(12):
        month = str(i+1).zfill(2)
        runbuffer = '/runs/v8-02-01/'
        if j==0:
            sysdir = '/users/jk/16/xzhang/'
            codedir = 'gcadj_std_M_V35/'
            rundir = 'geos5_ap_20'
            mondir1 = '16'
            mondir2 = '16'
        elif j==1:
            sysdir = '/users/jk/16/xzhang/'
            codedir = 'gcadj_std_M_SOB/'
            rundir = 'geos5_iasio3_16'
            mondir1 = month
            mondir2 = month2 = str(i+21).zfill(2)
            sf_ind = '20'
        elif j==2:
            sysdir = '/users/jk/15/xzhang/'
            codedir = 'gcadj_std_T_3d'
            rundir = 'geos5_all_16'
            mondir1 = month+'_07'
            mondir2 = month+'_27'
            sf_ind = '20'
        elif j==3:
            sysdir = '/users/jk/16/xzhang/'
            codedir = 'gcadj_std_I_3d'
            rundir = 'geos5_all_16'
            mondir1 = month+'_08'
            mondir2 = month+'_28'
            sf_ind = '20'
        path = sysdir+codedir+runbuffer+rundir
        if j>0:
            path_sf = path+mondir1+'/ctm.'+sf_ind+'.2016'+month+'01.nc'
            path_sf2 = path+mondir2+'/ctm.'+sf_ind+'.2016'+month+'16.nc'
            if os.path.isfile(path_sf) == False:
                sf_ind = '15'
                path_sf =  path+mondir1+'/ctm.'+sf_ind+'.2016'+month+'01.nc'
            if os.path.isfile(path_sf2) == False:
                sf_ind = '15'
                path_sf2 =  path+mondir1+'/ctm.'+sf_ind+'.2016'+month+'16.nc'
            spec_in = Dataset(path_sf)
            spec_in2 = Dataset(path_sf2)
            O3[j,2*i,:,:,:] = spec_in.variables["IJ-AVG-S__Ox"][:,:,:]
            O3[j,2*i+1,:,:,:] = spec_in2.variables["IJ-AVG-S__Ox"][:,:,:]
        else:
            path_ap = path+mondir1+'/ctm.01.2016'+month+'01.nc'
            path_ap2 = path+mondir2+'/ctm.01.2016'+month+'16.nc'
            spec_ap = Dataset(path_ap)
            spec_ap2 = Dataset(path_ap2)
            O3[j,2*i,:,:,:] = spec_ap.variables["IJ-AVG-S__Ox"][:,:,:]
            O3[j,2*i+1,:,:,:] = spec_ap2.variables["IJ-AVG-S__Ox"][:,:,:]
    figure(j,figsize=(12,10))
    pre_crt = np.array([900,700,500,300,200])
    for m in range(len(pre_crt)):
        O3_crt[j,2*i,m,:,:] = geos_interpolate(len1,lat,lon,O3_avg[j,2*i,:,:,:],ps,pre_crt[m])
        O3_crt[j,2*i+1,m,:,:] = geos_interpolate(len1,lat,lon,O3_avg[j,2*i+1,:,:,:],ps,pre_crt[m])

    for k in range(4):
        
        if k==0:
            title('CO emissions: DJF')
            plot_data = (2*np.mean(CO_sf[0:4,:,:],axis=0)+np.mean(CO_sf[22:24,:,:],axis=0))/3
        elif k==1:
            title('CO emissions: MAM')
            plot_data = np.mean(CO_sf[4:10,:,:],axis=0)
        elif k==2:
            title('CO emissions: JJA')
            plot_data = np.mean(CO_sf[10:16,:,:],axis=0)
        elif k==3:
            title('CO emissions: SON')
            plot_data = np.mean(CO_sf[16:22,:,:],axis=0)
        m1=Basemap(lon_0=0)
        m1.drawcoastlines()
        m1.drawparallels(arange(-90,120,30),labels=[1,0,0,1],labelstyle="+/-")
        m1.drawmeridians(arange(-180,210,60),labels=[1,0,0,1],labelstyle="+/-")
        x,y = m1(*np.meshgrid(lon,lat))
#For CO
        anth_plot = m1.pcolormesh(x,y,plot_data,vmin=0,vmax=2,cmap=get_cmap("RdBu_r"))
        divider = make_axes_locatable(ax)
        cax = divider.append_axes("bottom", size="7%", pad=0.3)
        plt.colorbar(orientation = 'horizontal',cax=cax)
        anth_plot.cmap.set_bad('lightgrey')


pre_crt = np.array([900,700,500,300,200])
O3_avg = np.mean(O3,axis=1)
O3_crt = np.zeros((5,len4,len2,len3))
for i in range(len4):
    O3_mt[i,:,:] = geos_interpolate(len1,lat,lon,O3_avg[i,:,:,:],ps,pre_mt)
pre_utls = 900
O3_utls = np.zeros((len4,len2,len3))
for i in range(len4):
    O3_utls[i,:,:] = geos_interpolate(len1,lat,lon,O3_avg[i,:,:,:],ps,pre_utls)

figure(1,figsize=(14,7.5))

ax = subplot(231)

title(r'$O_3$ concentrations CTRL: Jan-April 700 hPa[ppbv]')

plot_data, lon = addcyclic(O3_mt[0,:,:],lon)
#print plot_data[15,15]
m1=Basemap(lon_0=0)
m1.drawcoastlines()
m1.drawparallels(arange(-90,120,30),labels=[1,0,0,1],labelstyle="+/-")
m1.drawmeridians(arange(-180,210,60),labels=[1,0,0,1],labelstyle="+/-")

x,y = m1(*np.meshgrid(lon,lat))

#For O3 
anth_plot = m1.pcolormesh(x,y,plot_data,vmin=1,vmax=80)
divider = make_axes_locatable(ax)
cax = divider.append_axes("bottom", size="7%", pad=0.3)
plt.colorbar(orientation = 'horizontal',cax=cax)
anth_plot.cmap.set_bad('lightgrey')
bond = 15
ax = subplot(232)
title(r'$\Delta$$O_3$: IASI only')
plot_data = O3_mt[1,:,:]-O3_mt[0,:,:]
m1=Basemap(lon_0=0)
m1.drawcoastlines()
m1.drawparallels(arange(-90,120,30),labels=[1,0,0,1],labelstyle="+/-")
m1.drawmeridians(arange(-180,210,60),labels=[1,0,0,1],labelstyle="+/-")

x,y = m1(*np.meshgrid(lon,lat))

#For O3 
anth_plot = m1.pcolormesh(x,y,plot_data,vmin=-15,vmax=15,cmap=get_cmap("RdBu_r"))
divider = make_axes_locatable(ax)
cax = divider.append_axes("bottom", size="7%", pad=0.3)
plt.colorbar(orientation = 'horizontal',cax=cax)
anth_plot.cmap.set_bad('lightgrey')

ax = subplot(233)
title(r'$\Delta$$O_3$: All instrument')
plot_data = O3_mt[2,:,:]-O3_mt[0,:,:]
m1=Basemap(lon_0=0)
m1.drawcoastlines()
m1.drawparallels(arange(-90,120,30),labels=[1,0,0,1],labelstyle="+/-")
m1.drawmeridians(arange(-180,210,60),labels=[1,0,0,1],labelstyle="+/-")

x,y = m1(*np.meshgrid(lon,lat))

#For O3 
anth_plot = m1.pcolormesh(x,y,plot_data,vmin=-15,vmax=15,cmap=get_cmap("RdBu_r"))
divider = make_axes_locatable(ax)
cax = divider.append_axes("bottom", size="7%", pad=0.3)
plt.colorbar(orientation = 'horizontal',cax=cax)
anth_plot.cmap.set_bad('lightgrey')

ax = subplot(234)

title(r'$O_3$ concentrations CTRL: Jan-April 900 hPa[ppbv]')

plot_data= O3_utls[0,:,:]
#print plot_data[15,15]
m1=Basemap(lon_0=0)
m1.drawcoastlines()
m1.drawparallels(arange(-90,120,30),labels=[1,0,0,1],labelstyle="+/-")
m1.drawmeridians(arange(-180,210,60),labels=[1,0,0,1],labelstyle="+/-")

x,y = m1(*np.meshgrid(lon,lat))

#For O3 
anth_plot = m1.pcolormesh(x,y,plot_data,vmin=1,vmax=120)
divider = make_axes_locatable(ax)
cax = divider.append_axes("bottom", size="7%", pad=0.3)
plt.colorbar(orientation = 'horizontal',cax=cax)
anth_plot.cmap.set_bad('lightgrey')
bond = 15
ax = subplot(235)
title(r'$\Delta$$O_3$: IASI only')
plot_data = O3_utls[1,:,:]-O3_utls[0,:,:]
m1=Basemap(lon_0=0)
m1.drawcoastlines()
m1.drawparallels(arange(-90,120,30),labels=[1,0,0,1],labelstyle="+/-")
m1.drawmeridians(arange(-180,210,60),labels=[1,0,0,1],labelstyle="+/-")

x,y = m1(*np.meshgrid(lon,lat))

#For O3 
anth_plot = m1.pcolormesh(x,y,plot_data,vmin=-15,vmax=15,cmap=get_cmap("RdBu_r"))
divider = make_axes_locatable(ax)
cax = divider.append_axes("bottom", size="7%", pad=0.3)
plt.colorbar(orientation = 'horizontal',cax=cax)
anth_plot.cmap.set_bad('lightgrey')

ax = subplot(236)
title(r'$\Delta$$O_3$: All instrument')
plot_data = O3_utls[2,:,:]-O3_utls[0,:,:]
m1=Basemap(lon_0=0)
m1.drawcoastlines()
m1.drawparallels(arange(-90,120,30),labels=[1,0,0,1],labelstyle="+/-")
m1.drawmeridians(arange(-180,210,60),labels=[1,0,0,1],labelstyle="+/-")

x,y = m1(*np.meshgrid(lon,lat))

#For O3 
anth_plot = m1.pcolormesh(x,y,plot_data,vmin=-15,vmax=15,cmap=get_cmap("RdBu_r"))
divider = make_axes_locatable(ax)
cax = divider.append_axes("bottom", size="7%", pad=0.3)
plt.colorbar(orientation = 'horizontal',cax=cax)
anth_plot.cmap.set_bad('lightgrey')
show()
