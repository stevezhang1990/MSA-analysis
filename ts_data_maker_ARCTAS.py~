#!/usr/bin/python
from scipy import *
from pylab import *
from mpl_toolkits.basemap import Basemap
from netCDF4 import Dataset
from matplotlib.colors import LogNorm
from geos_interpolate import geos_interpolate
from mpl_toolkits.axes_grid1 import make_axes_locatable
import matplotlib.pyplot as plt
import numpy as np

path = '/users/jk/16/xzhang/ARCTAS/'
infile = Dataset(path+'arctas_no2_200807.nc')
lat = infile.variables["lat_orbit"][:]
lon = infile.variables["lon_orbit"][:]
alt = infile.variables["alt_orbit"][:]
no2_arctas = 
no2_diff_mask = np.ma.masked_where(no2_diff > 299, no2_diff)
no2_diff2_mask = np.ma.masked_where(no2_diff2 > 299, no2_diff2)
latitude = np.arange(10,70.5,0.5)
altitude = np.arange(0,4,0.2)
no2_obs = np.zeros((2,len(latitude),len(altitude)))
no2_count = np.zeros((2,len(latitude),len(altitude)))
no2_post = np.zeros((2,len(latitude),len(altitude)))
for i in range((len(no2_gc))):
    for j in range((len(latitude))-1):
        for k in range((len(altitude))-1):
            if lat[i]>latitude[j] and abs(lat[i])<=70 abs(lat[i])>=10:
                if lat[i]=<latitude[j+1]:
                   if alt[i]>altitude[k]:
                       if alt[i]=<altitude[k+1] and lon[i]<=-40 and lon[i]>=-140:
                           #print lon[i]
                           if lon[i] > -75 and lon[i]<20:
                               crt_lon = 0
                           else:
                               crt_lon = 1
                           if no2_noy[i] < 299 and no2_noy[i]>5:
                               #no2_obs[j,k] = no2_obs[j,k]+oh_atom[i]#100*(no2_diff[i]/oh_atom[i])
                               no2_obs[crt_lon,j,k] = no2_obs[crt_lon,j,k]+no2_gc[i]
                               no2_count[crt_lon,j,k] = no2_count[crt_lon,j,k]+1
                           if no2_ucats[i] < 299 and no2_ucats[i]>5:
                               #no2_obs[j,k] = no2_obs[j,k]+oh_atom[i]#100*(no2_diff2[i]/oh_atom[i])
                               no2_obs[crt_lon,j,k] = no2_obs[crt_lon,j,k]+no2_gc[i]
                               no2_count[crt_lon,j,k] = no2_count[crt_lon,j,k]+1
for j in range((len(latitude))):
    for k in range((len(altitude))):
        for i in range(2):
            if no2_obs[i,j,k] != 0:
                no2_post[i,j,k] = no2_obs[i,j,k]/no2_count[i,j,k]
np.save("/users/jk/16/xzhang/TS_annual/geos5_ap_2016/"+atom_file[file_i]+"_gc_reshape.npy",no2_post)
#np.save("/users/jk/15/xzhang/ATom/"+atom_file[file_i]+"_obs_reshape.npy",no2_post)
print "done"                           

