#!/usr/bin/python
from scipy import *
from pylab import *
from netCDF4 import Dataset
import glob
import os

file_count = 0
infile00 = Dataset('/users/jk/16/xzhang/gcadj_std_M_V35/runs/v8-02-01/geos5_mop_1601/ctm.01.20160101.nc')
len_lvl, len_lat, len_lon = shape(infile00.variables["CHEM-L_S__OH"][:,:,:])
len_time = 24*366
len_spec = 4
data_in = np.zeros((len_time,len_spec,len_lvl,len_lat,len_lon))
mon_counter = np.array([31,29,31,30,31,30,31,31,30,31,30,31])
path1 = '/users/jk/16/xzhang/TS_annual/geos5_all_08_2016/'
print "check"
for i in range(12):
    month = str(i+1).zfill(2)
    index1 = str(8).zfill(2)
    #month2 = str(i+21).zfill(2)
    index2 = str(28).zfill(2)
    day_counter = np.sum(mon_counter[0:i])
    ts_day_ini = 24*day_counter
    ts_day_fin = 24*(day_counter+mon_counter[i])
    #spec_ap = np.load(path+'ts_ap_16'+month+'.npy')
    #print "ap"
    spec_in = np.load(path1+'ts_all_16'+month+'_'+index1+'.npy')
    spec_in2 = np.load(path1+'ts_all_16'+month+'_'+index2+'.npy')
    print month
    #len_time_ap= len(spec_ap[:,0,0,0,0])
    len_time_in = len(spec_in[:,0,0,0,0])
    len_time_in2 = len(spec_in2[:,0,0,0,0])
    #data_ap[ts_day_ini:ts_day_fin,:,:,:,:] = spec_ap
    data_in[ts_day_ini:ts_day_ini+len_time_in,:,:,:,:] = spec_in
    data_in[ts_day_fin-len_time_in2:ts_day_fin,:,:,:,:] = spec_in2

dataset = Dataset(path1+'ts_all_08_2016.nc','w',format='NETCDF4_CLASSIC')
level = dataset.createDimension('level',len_lvl)
lat = dataset.createDimension('lat',len_lat)
lon = dataset.createDimension('lon',len_lon)
time = dataset.createDimension('time',len_time)
ts_co = dataset.createVariable('ts_co',np.float32,('time','level','lat','lon'))
ts_co[:,:,:,:] = data_in[:,0,:,:,:]
ts_ch2o = dataset.createVariable('ts_ch2o',np.float32,('time','level','lat','lon'))
ts_ch2o[:,:,:,:] = data_in[:,1,:,:,:]
ts_no2 = dataset.createVariable('ts_no2',np.float32,('time','level','lat','lon'))
ts_no2[:,:,:,:] = data_in[:,2,:,:,:]
ts_o3 = dataset.createVariable('ts_o3',np.float32,('time','level','lat','lon'))
ts_o3[:,:,:,:] = data_in[:,3,:,:,:]
dataset.close()
print "npy to netCDF conversion complete"    

# for the annual file, the shape is time,species#,ver_lvl,lat,lon
# species #: 0:CO 3:O3 2:NO2 1:CH2O
print "done"
show()
